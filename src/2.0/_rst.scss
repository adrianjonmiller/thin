@use 'lib/extends';
@use 'lib/vars' as *;

* {
  @extend %border-box;
}

:root {
  font-size: 87.5%;
}

html {
  font-family: 'Helvetica', Arial, sans-serif;
  @extend %reset;
}

body,
p,
legend,
h1,
h2,
h3,
h4,
h5,
h6 {
  @extend %reset;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1em;
}

.rst {
  &- {
    // Reset lists
    &-list {
      @extend %reset;
      list-style: none;
    }

    // Reset links
    &-link {
      color: inherit;
      text-decoration: none;
      outline: 0;

      &:focus {
        outline: 0;
      }
    }

    &-legend {
      display: table;
      float: left;
    }

    // Reset Fieldsets
    &-fieldset {
      @extend %reset;

      @at-root body:not(:-moz-handler-blocked) fieldset.rst--fieldset {
        display: table-cell;
      }
    }

    &-button {
      border: none;
      margin: 0;
      padding: 0;
      width: auto;
      overflow: visible;
      background: transparent;
      color: inherit;
      font: inherit;
      outline: none;
      line-height: normal;
      text-align: inherit;
      -webkit-font-smoothing: inherit;
      -moz-osx-font-smoothing: inherit;
      -webkit-appearance: none;
      
      &::-moz-focus-inner {
        border: 0;
        padding: 0;
      }
    }

    &-select {
      @extend %reset;

      &:focus {
        outline: 0;
      }
  
      &:-moz-focusring {
        color: transparent;
        text-shadow: 0 0 0 #000;
      }

      option:not(:checked) {
        color: black; /* prevent <option>s from becoming transparent as well */
      }
    }

    &-input {
      @each $input in $inputs {
        &-#{$input} {
          @extend %reset;
  
          &:focus {
            outline:0;
          }
        }
      }

      &-search {
        -webkit-appearance: textfield;
        appearance: textfield;
        -webkit-box-sizing: content-box;
        box-sizing: content-box;

        &::-webkit-search-decoration {
          display:none;
        }
      }
    }
  }
}
