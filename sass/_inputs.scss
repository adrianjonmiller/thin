@mixin inputs($height: 2rem, 1rem) {
  legend {
    padding: 0;
    display: table;
    margin-top: 0;
  }

  fieldset {
    border: 0;
    padding: 0.01em 0 0 0;
    min-width: 0;
    margin-left: 0;

    > select {
      margin-top: 0;
      display: block;
      width: 100%;
      height: $height;
      padding: 0 .25rem;
      font-size: $font-size;
      border-radius: 0;
      background: transparent;
                 outline: none;
      -webkit-appearance: none;
         -moz-appearance: none;
          -ms-appearance: none;
           -o-appearance: none;
              appearance: none;

      &::-ms-expand {
        display: none;
      }
    }

    > textarea {
      width: 100%;
      display: block;
      outline: none;
      font-size: $font-size;
      padding: .25em;
      margin-top: 0;
      border-radius: 0;
    }
  }

  label  {
    margin-right: .5rem;
    white-space: nowrap;
    display: block;
     -webkit-tap-highlight-color: transparent;

    > input[type="checkbox"],
    > input[type="radio"] {

      + span {
        display: inline-block;
        margin-top: .5rem;
      }
    }

    + label {
      margin-top: 0;
    }

    + input {
      margin-top: 0;
    }
  }

  body:not(:-moz-handler-blocked) fieldset {
    display: table-cell;
  }

  $inputs-text:
    email,
    number,
    password,
    search,
    tel,
    text,
    time,
    url;

  %input {
    outline: none;
    width: 100%;
    display: block;
    font-size: $font-size;
    line-height: 1em;
    padding: calc( (#{$height} - #{$font-size})/2) .25em;
    border-radius: 0;
    box-shadow: none;
    height: $height;

    + legend {
      transform: translate(0, 1.2rem);
      padding: 0 .25em;
      line-height: 1em;
      transition: transform .25s ease-in-out;
      transform: translate(0, calc( (#{$height} - #{$font-size})/2 + 1em) );
      pointer-events: none;
      user-select: none;
      transform-origin: left middle;
    }

    &:focus + legend,
    &.has-content + legend {
      transform: translate(0, 0);
    }
  }

  @each $type in $inputs-text {
    input[type="#{$type}"] {
      @extend %input;
    }
  }
}
